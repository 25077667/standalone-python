#!/bin/bash

set -e

# Function to find the real python executable
find_real_python() {
    find "$INSTALL_PREFIX/bin" -type f -executable -name 'python*-real' | head -n 1
}

# check magic_bootstraping_libc_path is same as $INSTALL_PREFIX/shared_libraries/lib/libc.so
# if not, copy it to magic_bootstraping_libc_path
bootstraping_libc() {
    if [ ! -f $magic_bootstraping_libc_path ]; then
        cp "$INSTALL_PREFIX/shared_libraries/lib/libc.so" "$magic_bootstraping_libc_path"
    fi
    if ! cmp -s "$INSTALL_PREFIX/shared_libraries/lib/libc.so" "$magic_bootstraping_libc_path"; then
        cp "$INSTALL_PREFIX/shared_libraries/lib/libc.so" "$magic_bootstraping_libc_path"
    fi
}

# Function to set up environment variables
setup_environment() {
    export SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    export INSTALL_PREFIX="$SCRIPT_DIR/../"
    
    # Find the REAL_PYTHON
    export REAL_PYTHON=$(find_real_python)
    
    # Set PYTHONPATH and backup PYTHONPATH
    export PYTHONPATH_BACKUP=$PYTHONPATH
    
    # Find python version from REAL_PYTHON
    PYTHON_VERSION=$(echo "$REAL_PYTHON" | grep -o -E '[0-9]+\.[0-9]+')
    export PYTHONPATH="$INSTALL_PREFIX/lib/python$PYTHON_VERSION/site-packages"
    PYTHON_VERSION=
    
    # Set PYTHONHOME to the install prefix
    export PYTHONHOME_BACKUP=$PYTHONHOME
    export PYTHONHOME=$INSTALL_PREFIX

    # set bootstraping libc
    bootstraping_libc
}

# Function to invoke the real python
invoke_real_python() {
    cd "$SCRIPT_DIR"    
    "$REAL_PYTHON" "$@"
}

# Function to restore environment variables
restore_environment() {
    export PYTHONHOME=$PYTHONHOME_BACKUP
    export PYTHONPATH=$PYTHONPATH_BACKUP
    cd "$cur_path"
}

# Main script
cur_path=$(pwd)
magic_bootstraping_libc_path="/tmp/StAnDaLoNeMuSlInTeRpReTeR.so"

setup_environment
invoke_real_python "$@"
restore_environment
